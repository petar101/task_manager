{"ast":null,"code":"var _jsxFileName = \"/Users/petar/Desktop/task_manager/frontend/src/components/tasklist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks } from '/api/tasksapi';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = ({\n  onTaskUpdated,\n  onTaskDeleted\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const data = await getTasks();\n        setTasks(data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task,\n      onTaskUpdated: onTaskUpdated,\n      onTaskDeleted: onTaskDeleted\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","TaskItem","jsxDEV","_jsxDEV","TaskList","onTaskUpdated","onTaskDeleted","_s","tasks","setTasks","fetchTasks","data","error","console","children","map","task","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/petar/Desktop/task_manager/frontend/src/components/tasklist.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getTasks } from '/api/tasksapi';\nimport TaskItem from './TaskItem';\n\nconst TaskList = ({ onTaskUpdated, onTaskDeleted }) => {\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        const fetchTasks = async () => {\n            try {\n                const data = await getTasks();\n                setTasks(data);\n            } catch (error) {\n                console.error('Error fetching tasks:', error);\n            }\n        };\n\n        fetchTasks();\n    }, []);\n\n    return (\n        <ul>\n            {tasks.map(task => (\n                <TaskItem\n                    key={task.id}\n                    task={task}\n                    onTaskUpdated={onTaskUpdated}\n                    onTaskDeleted={onTaskDeleted}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,eAAe;AACxC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAAC,CAAC;QAC7BS,QAAQ,CAACE,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDF,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,OAAA;IAAAW,QAAA,EACKN,KAAK,CAACO,GAAG,CAACC,IAAI,iBACXb,OAAA,CAACF,QAAQ;MAELe,IAAI,EAAEA,IAAK;MACXX,aAAa,EAAEA,aAAc;MAC7BC,aAAa,EAAEA;IAAc,GAHxBU,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIf,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb,CAAC;AAACd,EAAA,CA5BIH,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}