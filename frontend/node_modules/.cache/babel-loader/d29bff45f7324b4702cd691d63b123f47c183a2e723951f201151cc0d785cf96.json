{"ast":null,"code":"var _jsxFileName = \"/Users/petar/Desktop/task_manager/frontend/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n// useState is a hook to the backend to keep track of the tasks\n// useEffect is a hook to the backend to fetch the tasks from the backend \n// state holds the data in the backend(clipboard of taksk) and effect fetches the (tasks)\nimport axios from 'axios';\n\n// importing the react library for front end UI\n// importing axios for making HTTP requests to the backend (api requests)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // this is the cliboard of the tasks. \n\n  useEffect(() => {\n    // Fetch tasks from the backend\n    axios.get('http://localhost:5000/tasks').then(response => setTasks(response.data)).catch(error => console.error(error));\n  }, []);\n\n  //use effect hook works with axios to fetch the tasks from the backend.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: task.title\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n// this displays the tasks in the frontend. \n_s(App, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","get","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","title","id","_c","$RefreshReg$"],"sources":["/Users/petar/Desktop/task_manager/frontend/src/app.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n// useState is a hook to the backend to keep track of the tasks\n// useEffect is a hook to the backend to fetch the tasks from the backend \n// state holds the data in the backend(clipboard of taksk) and effect fetches the (tasks)\nimport axios from 'axios';\n\n// importing the react library for front end UI\n// importing axios for making HTTP requests to the backend (api requests)\n\nfunction App() {\n    const [tasks, setTasks] = useState([]);\n\n    // this is the cliboard of the tasks. \n\n    useEffect(() => {\n        // Fetch tasks from the backend\n        axios.get('http://localhost:5000/tasks')\n            .then(response => setTasks(response.data))\n            .catch(error => console.error(error));\n    }, []);\n\n    //use effect hook works with axios to fetch the tasks from the backend.\n\n    return (\n        <div>\n            <h1>Task Manager</h1>\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id}>{task.title}</li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n// this displays the tasks in the frontend. \n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD;AACA;AACA;AACA,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;;EAEAD,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACO,GAAG,CAAC,6BAA6B,CAAC,CACnCC,IAAI,CAACC,QAAQ,IAAIH,QAAQ,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CACzCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC7C,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA,oBACIV,OAAA;IAAAY,QAAA,gBACIZ,OAAA;MAAAY,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBhB,OAAA;MAAAY,QAAA,EACKT,KAAK,CAACc,GAAG,CAACC,IAAI,iBACXlB,OAAA;QAAAY,QAAA,EAAmBM,IAAI,CAACC;MAAK,GAApBD,IAAI,CAACE,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkB,CACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AACA;AAAAd,EAAA,CAzBSD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA2BZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}